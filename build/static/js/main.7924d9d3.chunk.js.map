{"version":3,"sources":["components/NavBar/NavBar.js","components/LogInForm/LogInForm.js","components/LogOut/LogOut.js","components/SignUpForm/SignUpForm.js","components/Home/Ticker/icons/icons.js","components/Home/Ticker/Ticker.js","components/Home/Hero/Hero.js","components/Home/Home.js","components/PurchaseShow/PurchaseShow.js","components/Portfolio/PurchaseHistory/PurchaseHistory.js","components/Portfolio/PurchaseForm/PurchaseForm.js","components/Portfolio/Holdings/Legend/Legend.js","components/Portfolio/Holdings/Graph/Graph.js","components/Portfolio/Holdings/Stats/Stats.js","components/Portfolio/Holdings/Holdings.js","components/Portfolio/Portfolio.js","components/Edit/Edit.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","navBarItems","className","key","href","isLoggedIn","push","onClick","logOut","role","aria-label","aria-expanded","datatarget","aria-hidden","LogInForm","htmlFor","type","name","onChange","handleInput","value","handleLogIn","LogOut","handleLogOut","SignUpForm","class","handleSignUp","icons","bitcoin","ethereum","eos","litecoin","ripple","Ticker","Object","keys","coinData","length","entries","sort","a","b","map","coin","i","src","alt","usd","usd_24h_change","toFixed","Hero","image-container","Home","coinAPI","useState","setCoinData","useEffect","axios","get","response","data","console","error","setInterval","PurchaseShow","purchase","_id","price","shares","log","fetch","json","useHistory","toUpperCase","style","color","to","PurchaseList","setPurchase","fetchData","showPurchases","PurchaseForm","classname","newPurchase","handleChange","handleSubmit","Legend","id","Graph","coinTotals","updateCoinTotals","summedTotals","investment","forEach","item","hasOwnProperty","center","label","dataEntry","Math","round","percentage","labelStyle","fontSize","fill","title","Stats","investmentTotal","setInvestmentTotal","netWorth","setNetWorth","total","reduce","worth","values","abs","Holdings","Portfolio","purchases","setPurchases","updateNewPurchase","event","preventDefault","method","headers","body","JSON","stringify","target","PurchaseHistory","Show","updatePurchase","history","match","params","handleDelete","onSubmit","App","setIsLoggedIn","email","password","isLogginIn","state","setState","post","localStorage","token","clear","path","render","loggedIn","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.7924d9d3.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./NavBar.css\";\n\nfunction NavBar(props) {\n    let navBarItems = [\n        <li className=\"navbar-item\" key={1}>\n            <a href=\"/\">Home</a>\n        </li>,\n    ];\n    if (props.isLoggedIn) {\n        navBarItems.push(\n            <li className=\"navbar-item\" key={2}>\n                <a href=\"/\" onClick={props.logOut}>\n                    Log Out\n                </a>\n            </li>,\n            <li className=\"navbar-item\" key={3}>\n                <a href=\"/portfolio\">Portfolio</a>\n            </li>\n        );\n    } else {\n        navBarItems.push(\n            <li className=\"navbar-item\" key={4}>\n                <a href=\"/signup\">Sign Up</a>\n            </li>\n        );\n        navBarItems.push(\n            <li className=\"navbar-item\" key={5}>\n                <a href=\"/login\">Log In</a>\n            </li>\n        );\n    }\n\n    return (\n        <nav className=\"navbar\">\n            <div className=\"navbar-brand\">\n                <a className=\"navbar-item\" href=\"/\">\n                    <h1>Crypto</h1>\n                </a>\n                <a\n                    role=\"button\"\n                    className=\"navbar-burger burger\"\n                    aria-label=\"menu\"\n                    aria-expanded=\"false\"\n                    datatarget=\"navbarBasicExample\"\n                    href=\"/\"\n                >\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                </a>\n            </div>\n             <ul className=\"navbar-end\">{navBarItems}</ul>\n        </nav>\n    );\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport \"./LogInForm.css\";\n\nfunction LogInForm(props) {\n    return (\n        <div className=\"loginform\">\n            <h2>Log In</h2>\n            <form>\n                <label htmlFor=\"email\">Email</label>\n                <input\n                    className=\"input\"\n                    type=\"text\"\n                    name=\"email\"\n                    onChange={props.handleInput}\n                />\n\n                <label htmlFor=\"password\">Password</label>\n                <input\n                    className=\"input\"\n                    type=\"text\"\n                    name=\"password\"\n                    onChange={props.handleInput}\n                />\n\n                <input\n                    className=\"button\"\n                    value=\"Submit\"\n                    type=\"submit\"\n                    onClick={props.handleLogIn}\n                />\n            </form>\n        </div>\n    );\n}\n\nexport default LogInForm;\n","import React from \"react\";\n\nfunction LogOut(props) {\n    return (\n        <div>\n            <h2>Log Out</h2>\n\n            <form>\n                <input\n                    className=\"input\"\n                    value=\"Log Out\"\n                    type=\"submit\"\n                    onClick={props.handleLogOut}\n                />\n            </form>\n        </div>\n    );\n}\n\nexport default LogOut;\n","import React from \"react\";\n\nimport \"./SignUpForm.css\";\n\nfunction SignUpForm(props) {\n  return (\n    <div class=\"signupform\">\n      <h2>Sign Up</h2>\n      <form>\n        \n          <label htmlFor=\"email\">Email</label>\n          <input type=\"text\" name=\"email\" onChange={props.handleInput} />\n        \n        \n          <label htmlFor=\"password\">Password</label>\n          <input type=\"text\" name=\"password\" onChange={props.handleInput} />\n        \n        <input value=\"Submit\" type=\"submit\" onClick={props.handleSignUp} />\n      </form>\n    </div>\n  );\n}\n\nexport default SignUpForm;\n","const icons = {\n    bitcoin: \"./assets/bitcoin.png\",\n    ethereum: \"./assets/ethereum.png\",\n    eos: \"./assets/eos.png\",\n    litecoin: \"./assets/litecoin.png\",\n    ripple: \"./assets/ripple.png\",\n};\n\nexport default icons;\n","import React from \"react\";\nimport icons from \"./icons/icons\";\nimport \"./Ticker.css\";\n\nconst Ticker = (props) => {\n    return (\n        <section className=\"ticker_wrap\">\n            {Object.keys(props.coinData).length > 0 ? (\n                <ul className=\"ticker_list\">\n                    {Object.entries(props.coinData)\n                        .sort((a, b) => (a[0] > b[0] ? 1 : -1))\n                        .map((coin, i) => {\n                            return (\n                                <li className=\"ticker_item\" key={i}>\n                                    <img src={icons[coin[0]]} alt=\"coin-logo\" />\n                                    <p className=\"ticker_item_name\">\n                                        <strong>{coin[0]}</strong>\n                                    </p>\n                                    <p className=\"ticker_item_price\">\n                                        ${coin[1].usd}\n                                    </p>\n                                    <p className=\"ticker_item_change\">\n                                        {coin[1].usd_24h_change.toFixed(2) >\n                                        0 ? (\n                                            <span className=\"text_green\">\n                                                ▲{\" \"}\n                                                {coin[1].usd_24h_change.toFixed(\n                                                    2\n                                                )}\n                                                %\n                                            </span>\n                                        ) : (\n                                            <span className=\"text_red\">\n                                                ▾{\" \"}\n                                                {coin[1].usd_24h_change.toFixed(\n                                                    2\n                                                )}\n                                                %\n                                            </span>\n                                        )}\n                                    </p>\n                                </li>\n                            );\n                        })}\n                </ul>\n            ) : (\n                <p>Loading...</p>\n            )}\n        </section>\n    );\n};\n\nexport default Ticker;\n","import React from \"react\";\nimport \"./Hero.css\";\n\n// import logo from './components/Home/Hero/logo.jpg';\n\nconst Hero = () => {\n    return (\n        <div className=\"hero-container\">\n            <div className=\"hero-text\">\n                <h1 className=\"hero-name\">CoinBox</h1>\n                <h1 className=\"hero-h1\">\n                    Manage Your Cryptocurrency Portfolio\n                </h1>\n                <h1 className=\"hero-h2\">\n                    CoinBox is a simple way to monitor market activity, make\n                    purchases, and review your profits and losses. Login or\n                    create account\n                </h1>\n            </div>\n\n            <div image-container>\n                <img\n                    className=\"hero-image\"\n                    src=\"https://i.ibb.co/2MwbH9d/Bitcoins-hepa-Golden-virtual-currency-coins-background-3-D-Illustration.jpg\"\n                    alt=\"new\"\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default Hero;\n","import React, { useEffect, useState } from \"react\";\nimport Ticker from \"./Ticker/Ticker\";\nimport Hero from \"./Hero/Hero\";\nimport axios from \"axios\";\n\nconst Home = (props) => {\n    const coinAPI =\n        \"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin%2Cethereum%2Ceos%2Cripple%2Clitecoin&vs_currencies=usd&include_24hr_change=true\";\n    const [coinData, setCoinData] = useState({});\n\n    // populate coinData state\n    useEffect(() => {\n        (async () => {\n            try {\n                const response = await axios.get(coinAPI);\n                const data = await response.data;\n                setCoinData({ ...data });\n            } catch (e) {\n                console.error(e);\n            }\n        })();\n    }, []);\n\n    // re-fetch coin api data every minute\n    useEffect(() => {\n        setInterval(() => {\n            (async () => {\n                try {\n                    const response = await axios.get(coinAPI);\n                    const data = await response.data;\n                    setCoinData({ ...data });\n                } catch (e) {\n                    console.error(e);\n                }\n            })();\n        }, 60000);\n    }, []);\n\n    return (\n        <>\n            <Hero />\n            <Ticker coinData={coinData} />\n        </>\n    );\n};\n\nexport default Home;\n","import React from \"react\";\nimport \"./purchaseshow.css\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\n\nfunction PurchaseShow(props) {\n    // console.log(props);\n    const { _id, coin, price, shares } = props.purchase;\n\n    console.log(_id);\n\n    const coinAPI =\n        \"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin%2Cethereum%2Ceos%2Cripple%2Clitecoin&vs_currencies=usd\";\n    const [coinData, setCoinData] = useState({});\n\n    useEffect(() => {\n        (async () => {\n            try {\n                const response = await fetch(coinAPI);\n                const data = await response.json();\n                setCoinData({ ...data });\n            } catch (e) {\n                console.error(e);\n            }\n        })();\n    }, []);\n    const history = useHistory();\n\n    const handleEdit = () => {\n        console.log(history);\n    };\n    return (\n        <div className=\"\">\n            <table className=\"tablecontainer\">\n                <tr>\n                    <td>{coin.toUpperCase()}</td>\n                    <td>${price}</td>\n                    <td>{shares}</td>\n                    <td>${(shares * price).toFixed(2)}</td>\n                    <td>\n                        {Object.entries(coinData).map((coin, i) => {\n                            // console.log(coin);\n                            if (coin[0] === props.purchase.coin) {\n                                if (coin[1].usd > props.purchase.price) {\n                                    return (\n                                        <span\n                                            key={i}\n                                            style={{ color: \"green\" }}\n                                        >\n                                            {\" \"}\n                                            $\n                                            {(\n                                                coin[1].usd -\n                                                props.purchase.price\n                                            ).toFixed(2)}{\" \"}\n                                            (\n                                            {(\n                                                ((coin[1].usd -\n                                                    props.purchase.price) /\n                                                    props.purchase.price) *\n                                                100\n                                            ).toFixed(2)}\n                                            %){\" \"}\n                                        </span>\n                                    );\n                                } else if (coin[1].usd < props.purchase.price) {\n                                    return (\n                                        <span key={i} style={{ color: \"red\" }}>\n                                            {\" \"}\n                                            $\n                                            {(\n                                                coin[1].usd -\n                                                props.purchase.price\n                                            ).toFixed(2)}{\" \"}\n                                            (\n                                            {(\n                                                ((coin[1].usd -\n                                                    props.purchase.price) /\n                                                    coin[1].usd) *\n                                                100\n                                            ).toFixed(2)}\n                                            %)\n                                        </span>\n                                    );\n                                } else {\n                                    return coin[1].usd - props.purchase.price;\n                                }\n                            }\n                        })}\n                    </td>\n                    <td>\n                        <Link to={`/${_id}`}>EDIT</Link>\n                    </td>\n                </tr>\n            </table>\n        </div>\n    );\n}\n\nexport default PurchaseShow;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport PurchaseShow from \"../../PurchaseShow/PurchaseShow.js\";\nimport \"./purchasehistory.css\";\nconst PurchaseList = (props) => {\n    const [purchase, setPurchase] = useState([]);\n\n    useEffect(() => {\n        // Need to wrap this in an async function to use await inside:\n        async function fetchData() {\n            const response = await axios.get(\n                \"http://localhost:3001/api/purchases\"\n            );\n            setPurchase(response.data);\n        }\n        fetchData();\n    }, []);\n\n    const showPurchases = purchase.map((purchase, i) => {\n        return (\n            <div>\n                <PurchaseShow purchase={purchase} />\n            </div>\n        );\n    });\n\n    return (\n        <div>\n            <div className=\"tablecontainer\">\n                <tr>\n                    <th>Name</th>\n                    <th>Price</th>\n                    <th>Shares</th>\n                    <th>Total</th>\n                    <th>P&L</th>\n                    <th>EDIT</th>\n                </tr>{\" \"}\n                <br />\n            </div>\n            {showPurchases}\n        </div>\n    );\n};\n\nexport default PurchaseList;\n","import React from \"react\";\nimport \"./PurchaseForm.css\";\n\nconst PurchaseForm = (props) => {\n    return (\n        <>\n            <form>\n                <h1 classname=\"purchase-form\">Purchase Form</h1>\n                <select\n                    type=\"number\"\n                    name=\"coin\"\n                    value={props.newPurchase.coin}\n                    onChange={props.handleChange}\n                >\n                    <option>Select Coin</option>\n                    <option>bitcoin</option>\n                    <option>eos</option>\n                    <option>ethereum</option>\n                    <option>litecoin</option>\n                    <option>ripple</option>\n                </select>\n                <label className=\"purchase-form-shares\">\n                    {\" \"}\n                    Shares:\n                    <input\n                        type=\"text\"\n                        name=\"shares\"\n                        value={props.newPurchase.shares}\n                        onChange={props.handleChange}\n                    />\n                </label>\n                <label>\n                    {\" \"}\n                    Price Per Share:\n                    <input\n                        type=\"text\"\n                        name=\"price\"\n                        value={props.newPurchase.price}\n                        onChange={props.handleChange}\n                    />\n                </label>\n                <button\n                    className=\"button\"\n                    type=\"submit\"\n                    onClick={props.handleSubmit}\n                >\n                    SUBMIT\n                </button>\n            </form>\n        </>\n    );\n};\n\nexport default PurchaseForm;\n","import React from \"react\";\nimport \"./Legend.css\";\n\nconst Legend = () => {\n    return (\n        <ul className=\"legend\">\n            <li id=\"legend_bitcoin\">\n                <span className=\"legend_circle\"></span>\n                <p>BTC</p>\n            </li>\n            <li id=\"legend_eos\">\n                <span className=\"legend_circle\"></span>\n                <p>EOS</p>\n            </li>\n            <li id=\"legend_ethereum\">\n                <span className=\"legend_circle\"></span>\n                <p>ETH</p>\n            </li>\n            <li id=\"legend_ripple\">\n                <span className=\"legend_circle\"></span>\n                <p>XRP</p>\n            </li>\n            <li id=\"legend_litecoin\">\n                <span className=\"legend_circle\"></span>\n                <p>LTC</p>\n            </li>\n        </ul>\n    );\n};\n\nexport default Legend;\n","import React, { useState, useEffect } from \"react\";\nimport { PieChart } from \"react-minimal-pie-chart\";\nimport Legend from \"../Legend/Legend\";\nimport \"./Graph.css\";\n\nconst Graph = (props) => {\n    const [coinTotals, updateCoinTotals] = useState({});\n\n    useEffect(() => {\n        const summedTotals = {};\n        props.investment.forEach((item) => {\n            if (summedTotals.hasOwnProperty(item.coin)) {\n                summedTotals[item.coin] += item.price * item.shares;\n            } else {\n                summedTotals[item.coin] = item.price * item.shares;\n            }\n        });\n        updateCoinTotals({ ...summedTotals });\n    }, [props.investment]);\n\n    const labelStyle = {\n        fontSize: \"5px\",\n        fill: \"#fff\",\n    };\n\n    return (\n        <>\n            {Object.keys(coinTotals).length > 0 && (\n                <div className=\"graph_wrap\">\n                    <PieChart\n                        center={[50, 50]}\n                        label={({ dataEntry }) =>\n                            `${Math.round(dataEntry.percentage)} %`\n                        }\n                        labelStyle={labelStyle}\n                        data={[\n                            {\n                                title: \"BTC\",\n                                value: coinTotals.bitcoin,\n                                color: \"#03295c\",\n                            },\n                            {\n                                title: \"EOS\",\n                                value: coinTotals.eos,\n                                color: \"#bc5090\",\n                            },\n                            {\n                                title: \"ETH\",\n                                value: coinTotals.ethereum,\n                                color: \"#8c3379\",\n                            },\n                            {\n                                title: \"XRP\",\n                                value: coinTotals.ripple,\n                                color: \"#eb4e5a\",\n                            },\n                            {\n                                title: \"LTC\",\n                                value: coinTotals.litecoin,\n                                color: \"#ffa600\",\n                            },\n                        ]}\n                    />\n                    <Legend />\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default Graph;\n","import React, { useState, useEffect } from \"react\";\nimport icons from \"../../../Home/Ticker/icons/icons\";\n\nconst Stats = (props) => {\n    const [investmentTotal, setInvestmentTotal] = useState(0);\n    const [netWorth, setNetWorth] = useState(0);\n\n    useEffect(() => {\n        const total = props.investment\n            .map((item) => item.price * item.shares)\n            .reduce((a, b) => a + b);\n        setInvestmentTotal(total);\n    }, [props.investment]);\n\n    useEffect(() => {\n        const worth =\n            Object.keys(props.netWorth).length > 0 &&\n            Object.values(props.netWorth).reduce((a, b) => a + b);\n        setNetWorth(worth);\n    }, [props.netWorth]);\n\n    return (\n        <>\n            {netWorth > 0 && (\n                <div className=\"stats_wrap\">\n                    <p className=\"net_label\">Net Worth:</p>\n                    <p className=\"net_total\">${netWorth.toFixed(2)}</p>\n                    <p>Investment: ${investmentTotal.toFixed(2)}</p>\n                    <p>\n                        {investmentTotal > netWorth ? (\n                            <span className=\"text_red\">\n                                ▾ ${(investmentTotal - netWorth).toFixed(2)}\n                            </span>\n                        ) : (\n                            <span className=\"text_green\">\n                                ▲ $\n                                {Math.abs(investmentTotal - netWorth).toFixed(\n                                    2\n                                )}\n                            </span>\n                        )}\n                    </p>\n                    <ul className=\"stats_coins\">\n                        {Object.entries(props.netWorth)\n                            .sort((a, b) => (a[1] > b[1] ? -1 : 1))\n                            .map((item, i) => {\n                                return (\n                                    <li key={i}>\n                                        <img\n                                            src={icons[item[0]]}\n                                            alt={icons[item[0]]}\n                                        />\n                                        {item[1].toFixed(2)}\n                                    </li>\n                                );\n                            })}\n                    </ul>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default Stats;\n","import React, { useEffect, useState } from \"react\";\nimport Graph from \"./Graph/Graph\";\nimport Stats from \"./Stats/Stats\";\nimport \"./Holdings.css\";\n\nconst Holdings = (props) => {\n    const [netWorth, setNetWorth] = useState(0);\n\n    useEffect(() => {\n        const summedTotals = {};\n        props.investment.forEach((item) => {\n            if (summedTotals.hasOwnProperty(item.coin)) {\n                summedTotals[item.coin] +=\n                    item.shares * props.coinData[item.coin].usd;\n            } else {\n                summedTotals[item.coin] =\n                    item.shares * props.coinData[item.coin].usd;\n            }\n        });\n        setNetWorth(summedTotals);\n    }, [props.coinData, props.investment]);\n\n    return (\n        <section className=\"holdings_wrap\">\n            {/* <h2>Holdings</h2> */}\n            <div className=\"holdings_totals\">\n                {props.investment.length > 0 ? (\n                    <Stats investment={props.investment} netWorth={netWorth} />\n                ) : (\n                    <p>Loading holdings...</p>\n                )}\n            </div>\n            <Graph investment={props.investment} />\n        </section>\n    );\n};\n\nexport default Holdings;\n","import React, { useEffect, useState } from \"react\";\nimport PurchaseHistory from \"./PurchaseHistory/PurchaseHistory\";\nimport PurchaseForm from \"./PurchaseForm/PurchaseForm\";\nimport Holdings from \"./Holdings/Holdings\";\nimport axios from \"axios\";\nimport \"./portfolio.css\";\n\nconst Portfolio = (props) => {\n    const coinAPI =\n        \"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin%2Cethereum%2Ceos%2Cripple%2Clitecoin&vs_currencies=usd&include_24hr_change=true\";\n    const [coinData, setCoinData] = useState({});\n    const [purchases, setPurchases] = useState([]);\n    const [newPurchase, updateNewPurchase] = useState({\n        coin: \"\",\n        price: \"\",\n        shares: \"\",\n    });\n    const handleChange = (event) => {\n        updateNewPurchase({\n            ...newPurchase,\n            [event.target.name]: event.target.value,\n        });\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            const response = await fetch(\n                \"http://localhost:3001/api/purchases\",\n                {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(newPurchase),\n                }\n            );\n            const data = await response.json();\n            setPurchases([...purchases, data]);\n            updateNewPurchase({\n                coin: \"\",\n                price: \"\",\n                shares: \"\",\n            });\n        } catch (e) {\n            console.error(e);\n        }\n    };\n\n    // populate coinData state\n    useEffect(() => {\n        (async () => {\n            try {\n                const response = await axios.get(coinAPI);\n                const data = await response.data;\n                setCoinData({ ...data });\n            } catch (e) {\n                console.error(e);\n            }\n        })();\n    }, []);\n\n    // populate purchase data\n    useEffect(() => {\n        (async () => {\n            try {\n                const response = await axios.get(\n                    \"http://localhost:3001/api/purchases\"\n                );\n                const data = await response.data;\n                setPurchases(data);\n            } catch (e) {\n                console.error(e);\n            }\n        })();\n    }, []);\n\n    return (\n        <>\n            <PurchaseForm\n                newPurchase={newPurchase}\n                handleChange={handleChange}\n                handleSubmit={handleSubmit}\n            />\n            <div className=\"purchasecontainer\">\n                <PurchaseHistory />\n            </div>\n            {Object.keys(coinData).length > 0 && (\n                <Holdings coinData={coinData} investment={purchases} />\n            )}\n        </>\n    );\n};\n\nexport default Portfolio;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nlet endpoint = \"/api/purchases\";\n\nexport default function Show(props) {\n    const [purchase, updatePurchase] = useState({});\n    const history = useHistory();\n\n    useEffect(() => {\n        (async () => {\n            try {\n                const response = await fetch(\n                    `http://localhost:3001/api/purchases/${props.match.params.id}`\n                );\n                const data = await response.json();\n                await updatePurchase(data);\n                console.log(purchase);\n            } catch (error) {\n                console.error(error);\n            }\n        })();\n    }, []);\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            const response = await fetch(\n                `http://localhost:3001/api/purchases/${props.match.params.id}`,\n                {\n                    method: \"PUT\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(purchase),\n                }\n            );\n            const data = await response.json();\n\n            updatePurchase({ ...purchase, ...data });\n\n            history.push(\"/portfolio\");\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    const handleChange = (event) => {\n        updatePurchase({\n            ...purchase,\n            [event.target.name]: event.target.value,\n        });\n    };\n\n    const handleDelete = async (event) => {\n        event.preventDefault();\n        try {\n            const response = await fetch(\n                `http://localhost:3001/api/purchases/${props.match.params.id}`,\n                {\n                    method: \"DELETE\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                }\n            );\n            await updatePurchase({});\n            history.push(\"/portfolio\");\n        } catch (e) {\n            console.error(e);\n        }\n    };\n\n    return (\n        <div className=\"Page-wrapper\">\n            {Object.keys(purchase).length > 0 ? (\n                <div>\n                    <form onSubmit={handleSubmit} className=\"task-form\">\n                        <h1> Edit Form </h1>\n                        Coin Name:{\" \"}\n                        <input\n                            type=\"text\"\n                            name=\"coin\"\n                            id=\"coin\"\n                            value={purchase.coin}\n                            onChange={handleChange}\n                        />\n                        <br />\n                        Price:{\" \"}\n                        <input\n                            type=\"text\"\n                            name=\"price\"\n                            id=\"price\"\n                            value={purchase.price}\n                            onChange={handleChange}\n                        />\n                        <br />\n                        Shares:{\" \"}\n                        <input\n                            type=\"text\"\n                            name=\"shares\"\n                            id=\"shares\"\n                            value={purchase.shares}\n                            onChange={handleChange}\n                        />\n                        <br />\n                        <button type=\"submit\">Submit Changes</button>\n                    </form>\n                </div>\n            ) : (\n                <h1>Nothing found on </h1>\n            )}\n            <h3>\n                <form>\n                    <button type=\"submit\" onClick={handleDelete}>\n                        Delete\n                    </button>\n                </form>\n            </h3>\n        </div>\n    );\n}\n\n// import React from \"react\";\n\n// function Edit(props) {\n//   return (\n//     <div className=\"signupform\">\n//       <h2>EDIT</h2>\n//       <form>\n//         <div className=\"field\">\n//           <label className=\"label\">Name</label>\n//           <div className=\"control\">\n//             <input className=\"input\" type=\"text\"  />\n//           </div>\n//         </div>\n\n//         <div className=\"field\">\n//           <label className=\"label\">Price</label>\n//           <div className=\"control\">\n//             <input\n//               className=\"input\"\n//               type=\"email\"\n\n//             />\n//           </div>\n//         </div>\n//         <div className=\"field\">\n//           <label className=\"label\">Shares</label>\n//           <div className=\"control\">\n//             <input\n//               className=\"input\"\n//               type=\"email\"\n\n//             />\n//           </div>\n//         </div>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default Edit;\n","import React, { useState, useEffect } from \"react\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport Navbar from \"./components/NavBar/NavBar\";\nimport LogInForm from \"./components/LogInForm/LogInForm\";\nimport LogOut from \"./components/LogOut/LogOut\";\nimport SignUpForm from \"./components/SignUpForm/SignUpForm\";\nimport Home from \"./components/Home/Home\";\nimport Portfolio from \"./components/Portfolio/Portfolio.js\";\nimport Edit from \"./components/Edit/Edit.js\";\nimport axios from \"axios\";\n\nfunction App() {\n    const history = useHistory();\n\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [state, setState] = useState({\n        email: \"\",\n        password: \"\",\n        isLogginIn: false,\n    });\n\n    // handle signin/signup form inputs\n    const handleInput = (event) => {\n        setState({ ...state, [event.target.name]: event.target.value });\n    };\n\n    // handle new user signup\n    const handleSignUp = async (event) => {\n        event.preventDefault();\n        try {\n            const response = await axios.post(\n                \"http://localhost:3001/users/signup\",\n                {\n                    email: state.email,\n                    password: state.password,\n                }\n            );\n            console.log(response);\n            localStorage.token = response.data.token;\n            setIsLoggedIn(true);\n            history.push(\"/portfolio\");\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    // handle login event\n    const handleLogIn = async (event) => {\n        event.preventDefault();\n        try {\n            const response = await axios.post(\n                \"http://localhost:3001/users/login\",\n                {\n                    email: state.email,\n                    password: state.password,\n                }\n            );\n            localStorage.token = response.data.token;\n            setIsLoggedIn(true);\n            history.push(\"/portfolio\");\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    // check for auth token\n    useEffect(() => {\n        if (localStorage.token) {\n            setIsLoggedIn(true);\n        } else {\n            setIsLoggedIn(false);\n        }\n    }, [isLoggedIn]);\n\n    // handle user logout\n    const handleLogOut = () => {\n        setState({\n            email: \"\",\n            password: \"\",\n            isLoggedIn: false,\n        });\n        localStorage.clear();\n        history.push(\"/\");\n    };\n    return (\n        <>\n            <Navbar isLoggedIn={isLoggedIn} logOut={handleLogOut} />\n            <div className=\"App\">\n                <Switch>\n                    <Route\n                        path=\"/signup\"\n                        render={(props) => {\n                            return (\n                                <SignUpForm\n                                    loggedIn={isLoggedIn}\n                                    handleInput={handleInput}\n                                    handleSignUp={handleSignUp}\n                                />\n                            );\n                        }}\n                    />\n                    <Route\n                        path=\"/logout\"\n                        render={(props) => {\n                            return (\n                                <LogOut\n                                    isLoggedIn={isLoggedIn}\n                                    handleLogOut={handleLogOut}\n                                />\n                            );\n                        }}\n                    />\n                    <Route\n                        path=\"/login\"\n                        render={(props) => {\n                            return (\n                                <LogInForm\n                                    isLoggedIn={isLoggedIn}\n                                    handleInput={handleInput}\n                                    handleLogIn={handleLogIn}\n                                />\n                            );\n                        }}\n                    />\n                    <Route\n                        path=\"/portfolio\"\n                        render={(props) => {\n                            return <Portfolio />;\n                        }}\n                    />\n                    <Route\n                        path=\"/:id\"\n                        render={(props) => {\n                            return <Edit {...props} />;\n                        }}\n                    />\n                    <Route\n                        path=\"/\"\n                        render={(props) => {\n                            return <Home />;\n                        }}\n                    />\n                </Switch>\n            </div>\n        </>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <App />\n        </Router>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}